python Exercise link = https://www.w3schools.com/Python/exercise.asp?filename=exercise_variables7

open python command line : C:\Users\Administrator>py
for exit : exit()	

1] Python syntax can be executed by writing directly in the Command Line
2] creating a python file on the server, using the .py file extension, and running it in the Command Line.
	 Example: run python script python myfile.py
	 
Python Variables		
	1] Python has no command for declaring a variable.
	2] A variable is created the moment you first assign a value to it.
		 Example: 
							x = 5
							y = "John"
							print(x)
							print(y)		 
							
	3] Variables do not need to be declared with any particular type and can even change type after they have been set.						
		 Example:
							x = 4 			# x is of type int
							x = "Sally" # x is now of type str
							print(x)	
							
	4] 	String variables can be declared either by using single or double quotes.							
  6] 	A variable name must start with a letter or the underscore character
  7] 	A variable name cannot start with a number
  8] 	A variable name can only contain alpha-numeric characters and underscores (A-z, 0-9, and _ )
  9] 	Variable names are case-sensitive (age, Age and AGE are three different variables)
	10] Python allows you to assign values to multiple variables in one line.	Example:	x, y, z = "Orange", "Banana", "Cherry"
	11] And you can assign the same value to multiple variables in one line.	Example:	x = y = z = "Orange"
	12] + charector use for string or char as concatination
	13] for numbers it will perform mathamatical operator
	14] If you try to combine a string and a number, Python will give you an error
	
	Global Variables
		1] Variables that are created outside of a function (as in all of the examples above) are known as global variables.
		2] Global variables can be used by everyone, both inside of functions and outside.
		3] To create a global variable inside a function, you can use the global keyword. Example: global x
		
Python Comments			 
	1] Comments starts with a #, and Python will ignore them:
	2] Comments can be used to explain Python code.
	3] Comments can be used to make the code more readable.
	4] Comments can be used to prevent execution when testing code										
	5] Python does not really have a syntax for multi line comments.
	6] To add a multiline comment you could insert a # for each line:											
	7] Python will ignore string literals that are not assigned to a variable, 
		 you can add a multiline string (triple quotes) in your code, and place your comment inside it.
		 Example: """ commen here """
		 
Python Data Types has the following data types built-in by default
	ext Type				: 	str
	Numeric Types		: 	int, float, complex
	Sequence Types	: 	list, tuple, range
	Mapping Type		: 	dict
	Set Types				: 	set, frozenset
	Boolean Type		: 	bool
	Binary Types		: 	bytes, bytearray, memoryview		

Assign variables
	x = "Hello World" 														| str 	
	x = 20 																				| int 	
	x = 20.5 																			| float 	
	x = 1j 																				| complex 	
	x = ["apple", "banana", "cherry"] 						| list 	
	x = ("apple", "banana", "cherry") 						| tuple 	
	x = range(6) 																	| range 	
	x = {"name" : "John", "age" : 36} 						| dict 	
	x = {"apple", "banana", "cherry"} 						| set 	
	x = frozenset({"apple", "banana", "cherry"}) 	| frozenset 	
	x = True 																			| bool 	
	x = b"Hello" 																	| bytes 	
	x = bytearray(5) 															| bytearray 	
	x = memoryview(bytes(5)) 											| memoryview	

Casting variables data types
	x = str("Hello World") 												| str 	
	x = int(20) 																	| int 	
	x = float(20.5) 															| float 	
	x = complex(1j) 															| complex 	
	x = list(("apple", "banana", "cherry")) 			| list 	
	x = tuple(("apple", "banana", "cherry")) 			| tuple 	
	x = range(6) 																	| range 	
	x = dict(name="John", age=36) 								| dict 	
	x = set(("apple", "banana", "cherry")) 				| set 	
	x = frozenset(("apple", "banana", "cherry")) 	| frozenset 	
	x = bool(5) 																	| bool 	
	x = bytes(5) 																	| bytes 	
	x = bytearray(5) 															| bytearray 	
	x = memoryview(bytes(5)) 											| memoryview

Python Strings
	1] String literals in python are surrounded by either single quotation marks, or double quotation marks.
	2] You can assign a multiline string to a variable by using three quotes Example: x ="""example""" or x='''example''' 
		 Note : in the result, the line breaks are inserted at the same position as in the code.
	3] Like many other popular programming languages, strings in Python are arrays of bytes representing unicode characters.
		 However, Python does not have a character data type, a single character is simply a string with a length of 1
		 Square brackets can be used to access elements of the string. like a = "Hello, World!" print(a[1])

Python Lists
There are four collection data types in the Python programming language:
	1] List is a collection which is ordered and changeable. Allows duplicate members.		 						x = ["item1","item2"];
	2] Tuple is a collection which is ordered and unchangeable. Allows duplicate members.							x = ("item1","item2");
	3] Set is a collection which is unordered and unindexed. No duplicate members. 										x = {"item1","item2"};
		 once created cant change/modified perticuler item of it.u can delete specific item of it.
	4] Dictionary is a collection which is unordered, changeable and indexed. No duplicate members.		x = {"key":"value","key":"value"}
	
Python Indentation	
	1] in other programming languages the indentation in code is for readability only, 
	2] the indentation in Python is very important.
	3] Python uses indentation to indicate a block of code.	 
	4] if code have to written in same block of code then identation must be same	
	5] white spaces are use to define block of code 












	
		 
		 